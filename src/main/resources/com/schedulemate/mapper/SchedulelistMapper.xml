<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.schedulemate.mapper.SchedulelistMapper">
	<resultMap id="schedulelist"
		type="com.schedulemate.schedule.domain.SchedulelistVO">
		<id property="slnum" column="sl_num" />
		<result property="slplannedTime" column="sl_plannedTime" />
		<result property="slplannedMin"
			column="sl_plannedMin" />
		<result property="slcontent" column="sl_content" />
		<result property="slimportantschedule" column="sl_importantschedule" />
		<result property="slcategory" column="sl_category" />
		<result property="snum" column="s_num" />
		<result property="sdate" column="s_date" />
	</resultMap>

	<!-- 한달로 묶어서 반환 -->
	<select id="readMonthly" resultMap="schedulelist">
		SELECT 
		 sl.sl_num, sl.sl_plannedtime, sl.sl_plannedmin, sl.sl_content, 
		 sl.sl_importantschedule, sl.sl_category, TO_CHAR(sl.s_date, 'yyyy.mm.dd') AS s_date, sl.s_num
		FROM schedule s
		JOIN schedulelist sl ON s.s_date = sl.s_date AND s.s_num = sl.s_num
		JOIN member m ON s.m_num = m.m_num
		WHERE sl.s_date BETWEEN #{startDate} AND #{endDate}
				AND s.m_num = #{mnum}
		ORDER BY sl.s_date ASC, sl.sl_plannedtime ASC, sl_plannedmin ASC
	</select>	
	<!-- 스케줄리스트 read -->
	<select id='read' resultMap="schedulelist">
		SELECT sl_num, sl_plannedTime, sl_plannedMin, sl_content, sl_importantschedule, sl_category, s_num, TO_CHAR(s_date, 'yyyy.mm.dd') AS s_date
		FROM schedulelist
		WHERE s_num = #{snum}
		ORDER BY sl_plannedtime ASC, sl_plannedmin ASC, sl_num ASC
	</select>
	<!-- chatId를 조건으로 매주 스케줄 리스트 가져오기 -->
	<select id='readWeeklySchedulelist'  resultMap="schedulelist">	
		SELECT 
		    sl.sl_num, 
		    sl.sl_plannedTime, 
		    sl.sl_plannedMin, 
		    sl.sl_content, 
		    sl.sl_importantschedule, 
		    sl.sl_category, 
		    sl.s_num, 
		    TO_CHAR(sl.s_date, 'yyyy.mm.dd') AS s_date
		FROM 
		    schedulelist sl
		    JOIN schedule s ON sl.s_num = s.s_num
		    JOIN member m ON s.m_num = m.m_num
		WHERE 
		    m.m_botuserid = #{ chatId }
		    AND (s.s_date BETWEEN #{ startDate } AND #{ endDate }) 
		    AND m.m_weekend = 1
		ORDER BY 
		    s.s_date ASC, 
		    sl.sl_plannedTime ASC, 
		    sl.sl_plannedMin ASC, 
		    sl.sl_num ASC
	</select>
	<!-- chatId를 조건으로 매달 중요 스케줄 리스트 가져오기 -->
	<select id="readImportantMonthlySchedulelist"  resultMap="schedulelist">
		SELECT 
		    sl.sl_num, 
		    sl.sl_plannedTime, 
		    sl.sl_plannedMin, 
		    sl.sl_content, 
		    sl.sl_importantschedule, 
		    sl.sl_category, 
		    sl.s_num, 
		    TO_CHAR(sl.s_date, 'yyyy.mm.dd') AS s_date
		FROM 
		    schedulelist sl
		    JOIN schedule s ON sl.s_num = s.s_num
		    JOIN member m ON s.m_num = m.m_num
		WHERE 
		    m.m_botuserid = #{ chatId }
		    AND (s.s_date BETWEEN #{ startDate } AND #{ endDate }) 
		    AND m.m_importantmonth = 1
			AND sl.sl_importantschedule = 1
		ORDER BY 
		    s.s_date ASC, 
		    sl.sl_plannedTime ASC, 
		    sl.sl_plannedMin ASC, 
		    sl.sl_num ASC
	</select>
	
	<!-- 스케줄 create -->
	<insert id='create' parameterType="com.schedulemate.schedule.domain.SchedulelistVO">
		INSERT INTO schedulelist(
			sl_num,
			sl_plannedTime,
			sl_plannedMin,
			sl_content,
			sl_importantschedule,
			sl_category,
			s_num,
			s_date
		)
		VALUES(
			schedulelist_seq.NEXTVAL,
			#{slplannedTime},
			#{slplannedMin},
			#{slcontent},
			#{slimportantschedule},
			#{slcategory},
			#{snum},
			#{sdate}
		)
	</insert>
	<!-- 스케줄 삭제  -->
	<delete id="delete"  parameterType="int">
		DELETE FROM schedulelist 
		WHERE sl_num = #{slnum}
	</delete>
	<!-- 스케줄 수정  -->
	<update id="update"  parameterType="com.schedulemate.schedule.domain.SchedulelistVO">
		UPDATE schedulelist
		SET sl_plannedTime = #{slplannedTime}, sl_plannedMin = #{slplannedMin}, sl_content =  #{slcontent}, sl_category = #{slcategory}
		WHERE sl_num = #{slnum}
	</update>
	<!-- 스케줄 중요 스케줄 수정  -->
	<update id="updateImportantSchedule"  parameterType="com.schedulemate.schedule.domain.SchedulelistVO">
		UPDATE schedulelist
		SET sl_importantschedule = #{slimportantschedule}
		WHERE sl_num = #{slnum}
	</update>
</mapper>